input { 
  couchdb_changes {
    sequence_path => "/xa/metanet/services/gmr-viewer-clj/es/seq.d/test_docs_extraction_demo_stickles.seq"
    db            => "test_docs_extraction_demo_stickles"
    host          => "localhost"
  }
}

output { 
#  stdout { codec => rubydebug } 

  elasticsearch { 
    hosts           => ["localhost:9202"] 
    index           => "lms-extraction_demo_stickles" 
    document_type   => "lms3" 
    document_id     => "%{[@metadata][_id]}"
    script          => "# =====================================================================\n# Elasticsearch\n# ---------------------------------------------------------------------\n# Make index for 'lms' key; no index if no lms key is present\n# ---------------------------------------------------------------------\n\ndef get(m, k, default):\n    \"Same as dict.get(k[, default]) for java.util.Map objects.\"\n    v = m.get(k)\n    return v if v else default\n\ndef make_index(ctx):\n    \"Make flat index from document in ctx.doc.\"\n    doc = ctx['doc']\n    if 'lms' in doc and len(doc['lms']) > 0:\n        newDoc = dict()\n        lms = doc['lms']\n        newDoc['id'] = doc['_id']\n        if 'perspective' in doc:\n            newDoc['perspective'] = doc['perspective']\n\n        # Include sentence\n        newDoc['text'] = doc['text']\n\n        for lm in lms:\n            # Here lm is actually an instance of java.util.Map (bug in jython?)\n            newDoc['score'] = lm['score']\n            newDoc['cms']   = [c.split('Metaphor_')[1] for c in get(lm, 'cms', [])]\n            newDoc['cxn']   = lm['cxn']\n\n            # Source\n            source = lm['source']\n            newDoc['source-form']           = source['form']\n            newDoc['source-lemma']          = source['lemma']\n            newDoc['source-concepts']       = source['concepts']\n            newDoc['source-framenames']     = source['framenames']\n            newDoc['source-framefamilies']  = source['framefamilies']\n            newDoc['source-coreness']       = [m['coreness']\n                                               for m in get(source, 'mappings', [])\n                                               if 'coreness' in m]\n\n            # Target\n            target = lm['target']\n            newDoc['target-form']           = target['form']\n            newDoc['target-lemma']          = target['lemma']\n            newDoc['target-concept']        = target['concept']\n            newDoc['target-framenames']     = target['framenames']\n            newDoc['target-congroup']       = target['congroup']\n            newDoc['target-framefamily']    = target['framefamily']\n\n        return newDoc\n    else:\n        return None\n\nlms = make_index(ctx)\nif lms != None:\n    ctx['doc'] = lms\nelse:\n    ctx['ignore'] = True\n"
    scripted_upsert => true
    script_lang     => "python"
    script_type     => ["inline"]
  } 
}
